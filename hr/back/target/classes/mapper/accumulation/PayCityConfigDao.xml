<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.accumulation.dao.PayCityConfigDao">
  <sql id="payCityConfigColumns">
    <trim suffixOverrides=",">
      a.id AS "id",
      a.company_id AS "companyId",
      a.pay_city_name AS "payCityName",
      a.social_avg_amount AS "socialAvgAmount",
      a.create_by AS "createBy",
      a.update_by AS "updateBy",
      a.create_date AS "createDate",
      a.update_date AS "updateDate",
      a.del_flag AS "delFlag",
    </trim>
  </sql>
  <sql id="payCityConfigJoins">
  </sql>

    <select id="get" resultType="com.geeke.accumulation.entity.PayCityConfig">
    SELECT
    <include refid="payCityConfigColumns" />
    FROM pay_city_config a
    <include refid="payCityConfigJoins" />
    WHERE a.id = #{id}
  </select>
  <select id="count" resultType="int">
    SELECT COUNT(*) FROM pay_city_config a
    <include refid="payCityConfigJoins" />
    <where>
      1=1
      AND a.id > 0
      <include refid="Common.whereParams" />
    </where>
  </select>
  <select id="listPage" resultType="com.geeke.accumulation.entity.PayCityConfig">
    SELECT
    <include refid="payCityConfigColumns" />
    FROM pay_city_config a
    <include refid="payCityConfigJoins" />
    <where>
      1=1
      AND a.id > 0
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultType="com.geeke.accumulation.entity.PayCityConfig">
    SELECT
    <include refid="payCityConfigColumns" />
    FROM pay_city_config a
    <include refid="payCityConfigJoins" />
    <where>
      1=1
      AND a.id > 0
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
  </select>
  <insert id="insert">
    INSERT INTO pay_city_config(
    <trim suffixOverrides=",">
      id,
      company_id,
      pay_city_name,
      social_avg_amount,
      create_by,
      update_by,
      create_date,
      update_date,
      del_flag,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ id },
      #{ companyId },
      #{ payCityName },
      #{ socialAvgAmount },
      #{ createBy },
      #{ updateBy },
      #{ createDate },
      #{ updateDate },
      #{ delFlag },
    </trim>
    )
  </insert>
  <update id="update">
    UPDATE pay_city_config SET
    <trim suffixOverrides=",">
      company_id = #{ companyId },
      pay_city_name = #{ payCityName },
      social_avg_amount = #{ socialAvgAmount },
      update_by = #{ updateBy },
      update_date = #{ updateDate }
    </trim>
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <update id="delete">
    DELETE FROM pay_city_config
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO pay_city_config(
    <trim suffixOverrides=",">
      id,
      company_id,
      pay_city_name,
      social_avg_amount,
      create_by,
      update_by,
      create_date,
      update_date,
      del_flag,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{entity.id},
        #{entity.companyId},
        #{entity.payCityName},
        #{entity.socialAvgAmount},
        #{entity.createBy},
        #{entity.updateBy},
        #{entity.createDate},
        #{entity.updateDate},
        #{entity.delFlag},
      </trim>
      )
    </foreach>
  </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE pay_city_config
    <set>
      <trim prefix="company_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.companyId}
        </foreach>
      </trim>
      <trim prefix="pay_city_name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.payCityName}
        </foreach>
      </trim>
      <trim prefix="social_avg_amount=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.socialAvgAmount}
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
      <trim prefix="del_flag=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.delFlag}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    DELETE FROM pay_city_config
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>

</mapper>