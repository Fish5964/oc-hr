<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.induction.dao.TsmTrainingExperienceDao">
  <sql id="tsmTrainingExperienceColumns">
    <trim suffixOverrides=",">
      a.id AS "id",
      a.induction_id AS "inductionId",
      a.course AS "course",
      a.start_time AS "startTime",
      a.end_time AS "endTime",
      a.duration AS "duration",
      a.institution_name AS "institutionName",
      a.location AS "location",
      a.remarks AS "remarks",
      a.create_by AS "createBy",
      a.create_date AS "createDate",
      a.update_by AS "updateBy",
      a.update_date AS "updateDate",
      a.del_flag AS "delFlag",
    </trim>
  </sql>
  <sql id="tsmTrainingExperienceJoins">
  </sql>
  <resultMap id="resultTsmTrainingExperienceMap" type="com.geeke.induction.entity.TsmTrainingExperience">
    <result property="id" column="id" />
    <result property="inductionId" column="inductionId" />
    <result property="course" column="course" />
    <result property="startTime" column="startTime" />
    <result property="endTime" column="endTime" />
    <result property="duration" column="duration" />
    <result property="institutionName" column="institutionName" />
    <result property="location" column="location" />
    <result property="remarks" column="remarks" />
    <result property="createBy" column="createBy" />
    <result property="createDate" column="createDate" />
    <result property="updateBy" column="updateBy" />
    <result property="updateDate" column="updateDate" />
    <result property="delFlag" column="delFlag" />
  </resultMap>
  <select id="get" resultMap="resultTsmTrainingExperienceMap">
    SELECT
    <include refid="tsmTrainingExperienceColumns" />
    FROM tsm_training_experience a
    <include refid="tsmTrainingExperienceJoins" />
    WHERE a.id = #{id}
  </select>
  <select id="count" resultType="int">
    SELECT COUNT(*) FROM tsm_training_experience a
    <include refid="tsmTrainingExperienceJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
  </select>
  <select id="listPage" resultMap="resultTsmTrainingExperienceMap">
    SELECT
    <include refid="tsmTrainingExperienceColumns" />
    FROM tsm_training_experience a
    <include refid="tsmTrainingExperienceJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultMap="resultTsmTrainingExperienceMap">
    SELECT
    <include refid="tsmTrainingExperienceColumns" />
    FROM tsm_training_experience a
    <include refid="tsmTrainingExperienceJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
  </select>
  <insert id="insert">
    INSERT INTO tsm_training_experience(
    <trim suffixOverrides=",">
      id,
      induction_id,
      course,
      start_time,
      end_time,
      duration,
      institution_name,
      location,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ id },
      #{ inductionId },
      #{ course },
      #{ startTime },
      #{ endTime },
      #{ duration },
      #{ institutionName },
      #{ location },
      #{ remarks },
      #{ createBy },
      #{ createDate },
      #{ updateBy },
      #{ updateDate },
      #{ delFlag },
    </trim>
    )
  </insert>
  <update id="update">
    UPDATE tsm_training_experience SET
    <trim suffixOverrides=",">
      induction_id = #{ inductionId },
      course = #{ course },
      start_time = #{ startTime },
      end_time = #{ endTime },
      duration = #{ duration },
      institution_name = #{ institutionName },
      location = #{ location },
      remarks = #{ remarks },
      update_by = #{ updateBy },
      update_date = #{ updateDate },
    </trim>
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <update id="delete">
    UPDATE tsm_training_experience SET
    update_by = #{updateBy},
    update_date = #{updateDate},
    del_flag = #{DEL_FLAG_DELETE}
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO tsm_training_experience(
    <trim suffixOverrides=",">
      id,
      induction_id,
      course,
      start_time,
      end_time,
      duration,
      institution_name,
      location,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{entity.id},
        #{entity.inductionId},
        #{entity.course},
        #{entity.startTime},
        #{entity.endTime},
        #{entity.duration},
        #{entity.institutionName},
        #{entity.location},
        #{entity.remarks},
        #{entity.createBy},
        #{entity.createDate},
        #{entity.updateBy},
        #{entity.updateDate},
        #{entity.delFlag},
      </trim>
      )
    </foreach>
  </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE tsm_training_experience
    <set>
      <trim prefix="induction_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.inductionId}
        </foreach>
      </trim>
      <trim prefix="course=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.course}
        </foreach>
      </trim>
      <trim prefix="start_time=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.startTime}
        </foreach>
      </trim>
      <trim prefix="end_time=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.endTime}
        </foreach>
      </trim>
      <trim prefix="duration=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.duration}
        </foreach>
      </trim>
      <trim prefix="institution_name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.institutionName}
        </foreach>
      </trim>
      <trim prefix="location=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.location}
        </foreach>
      </trim>
      <trim prefix="remarks=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.remarks}
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    UPDATE tsm_training_experience
    <set>
      <trim prefix="del_flag=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then 1
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
</mapper>