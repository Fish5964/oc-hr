<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.induction.contract.dao.InductionContractRenewalDao">
  <sql id="inductionContractRenewalColumns">
    <trim suffixOverrides=",">
      a.id AS "id",
      a.code AS "code",
      a.theme AS "theme",
      a.name AS "name",
      a.gender AS "gender.id",
      IFNULL(gender.name,'') AS "gender.name",
      a.phone AS "phone",
      a.id_number AS "idNumber",
      a.email AS "email",
      a.address AS "address",
      a.entry_time AS "entryTime",
      a.probation_month AS "probationMonth.id",
      IFNULL(probationMonth.name,'') AS "probationMonth.name",
      a.employee_level AS "employeeLevel",
      a.employee_number AS "employeeNumber",
      a.tech_position AS "techPosition.id",
      IFNULL(techPosition.name,'') AS "techPosition.name",
      IFNULL(techPosition.value,'') AS "techPosition.value",
      a.b_job AS "bjob",
      a.contract_start_time AS "contractStartTime",
      a.contract_end_time AS "contractEndTime",
      a.probation_end_time AS "probationEndTime",
      a.company_id AS "company.id",
      IFNULL(company.name,'') AS "company.name",
      IFNULL(company.code,'') AS "company.code",
      a.department_id AS "department.id",
      IFNULL(department.name,'') AS "department.name",
      IFNULL(department.code,'') AS "department.code",
      a.company_email AS "companyEmail",
      a.contract_sign_unit AS "contractSignUnit",
      a.labor_legalmana AS "laborLegalmana",
      a.report_address AS "reportAddress",
      a.full_wages AS "fullWages",
      a.probation_wages AS "probationWages",
      a.basic_wages AS "basicWages",
      a.probation_basic_wages AS "probationBasicWages",
      a.secrecy_reward AS "secrecyReward",
      a.system_reward AS "systemReward",
      a.basic_performance AS "basicPerformance",
      a.floating_performance AS "floatingPerformance",
      a.probation_basic_performance AS "probationBasicPerformance",
      a.probation_floating_performance AS "probationFloatingPerformance",
      a.contract_date AS "contractDate",
      a.contract_start_date AS "contractStartDate",
      a.contract_status AS "contractStatus.value",
      IFNULL(contractStatus.name,'') AS "contractStatus.name",
      a.sign_status AS "signStatus.value",
      IFNULL(signStatus.name,'') AS "signStatus.name",
      IFNULL(signStatus.id,'') AS "signStatus.id",
      a.remarks AS "remarks",
      a.create_by AS "createBy",
      a.create_date AS "createDate",
      a.update_by AS "updateBy",
      a.update_date AS "updateDate",
      a.del_flag AS "delFlag",
      a.expiration_date AS "expirationDate",
      a.end_date AS "endDate",
      a.arrive_name AS "arriveName",
      a.arrive_phone AS "arrivePhone",
      a.sign_date AS "signDate",
      a.proc_inst AS "procInst",
      a.proc_status AS "procStatus.id",
      IFNULL(procStatus.name,'') AS "procStatus.name",
    </trim>
  </sql>
  <sql id="inductionContractRenewalJoins">
    LEFT JOIN sys_dict_item gender ON gender.id = a.gender
    LEFT JOIN sys_dict_item probationMonth ON probationMonth.id = a.probation_month
    LEFT JOIN sys_dict_item techPosition ON techPosition.id = a.tech_position
    LEFT JOIN org_company company ON company.id = a.company_id
    LEFT JOIN org_department department ON department.id = a.department_id
    LEFT JOIN sys_dict_item contractStatus ON contractStatus.value = a.contract_status AND contractStatus.dict_type_id = &#39;1548811077194866691&#39;
    LEFT JOIN sys_dict_item signStatus ON signStatus.value = a.sign_status AND signStatus.dict_type_id = &#39;1548811077194866696&#39;
    LEFT JOIN sys_dict_item procStatus ON procStatus.id = a.proc_status
  </sql>
  <select id="get" resultType="com.geeke.induction.contract.entity.InductionContractRenewal">
    SELECT
    <include refid="inductionContractRenewalColumns" />
    FROM tsm_induction_contract_renewal a
    <include refid="inductionContractRenewalJoins" />
    WHERE a.id = #{id}
  </select>
  <select id="count" resultType="int">
    SELECT COUNT(*) FROM tsm_induction_contract_renewal a
    <include refid="inductionContractRenewalJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
  </select>
  <select id="listPage" resultType="com.geeke.induction.contract.entity.InductionContractRenewal">
    SELECT
    <include refid="inductionContractRenewalColumns" />
    FROM tsm_induction_contract_renewal a
    <include refid="inductionContractRenewalJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultType="com.geeke.induction.contract.entity.InductionContractRenewal">
    SELECT
    <include refid="inductionContractRenewalColumns" />
    FROM tsm_induction_contract_renewal a
    <include refid="inductionContractRenewalJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
  </select>
  <insert id="insert">
    INSERT INTO tsm_induction_contract_renewal(
    <trim suffixOverrides=",">
      id,
      code,
      theme,
      name,
      gender,
      phone,
      id_number,
      email,
      address,
      entry_time,
      probation_month,
      employee_level,
      employee_number,
      tech_position,
      b_job,
      contract_start_time,
      contract_end_time,
      probation_end_time,
      company_id,
      department_id,
      company_email,
      contract_sign_unit,
      labor_legalmana,
      report_address,
      full_wages,
      probation_wages,
      basic_wages,
      probation_basic_wages,
      secrecy_reward,
      system_reward,
      basic_performance,
      floating_performance,
      probation_basic_performance,
      probation_floating_performance,
      contract_date,
      contract_start_date,
      contract_status,
      sign_status,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
      expiration_date,
      end_date,
      arrive_name,
      arrive_phone,
      sign_date,
      proc_inst,
      proc_status,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ id },
      #{ code },
      #{ theme },
      #{ name },
      #{ gender.id },
      #{ phone },
      #{ idNumber },
      #{ email },
      #{ address },
      #{ entryTime },
      #{ probationMonth.id },
      #{ employeeLevel },
      #{ employeeNumber },
      #{ techPosition.id },
      #{ bjob },
      #{ contractStartTime },
      #{ contractEndTime },
      #{ probationEndTime },
      #{ company.id },
      #{ department.id },
      #{ companyEmail },
      #{ contractSignUnit },
      #{ laborLegalmana },
      #{ reportAddress },
      #{ fullWages },
      #{ probationWages },
      #{ basicWages },
      #{ probationBasicWages },
      #{ secrecyReward },
      #{ systemReward },
      #{ basicPerformance },
      #{ floatingPerformance },
      #{ probationBasicPerformance },
      #{ probationFloatingPerformance },
      #{ contractDate },
      #{ contractStartDate },
      #{ contractStatus.value },
      #{ signStatus.value },
      #{ remarks },
      #{ createBy },
      #{ createDate },
      #{ updateBy },
      #{ updateDate },
      #{ delFlag },
      #{ expirationDate },
      #{ endDate },
      #{ arriveName },
      #{ arrivePhone },
      #{ signDate },
      #{ procInst },
      #{ procStatus.id },
    </trim>
    )
  </insert>
  <update id="update">
    UPDATE tsm_induction_contract_renewal SET
    <trim suffixOverrides=",">
      theme = #{ theme },
      name = #{ name },
      gender = #{ gender.id },
      phone = #{ phone },
      id_number = #{ idNumber },
      email = #{ email },
      address = #{ address },
      entry_time = #{ entryTime },
      probation_month = #{ probationMonth.id },
      employee_level = #{ employeeLevel },
      employee_number = #{ employeeNumber },
      tech_position = #{ techPosition.id },
      b_job = #{ bjob },
      contract_start_time = #{ contractStartTime },
      contract_end_time = #{ contractEndTime },
      probation_end_time = #{ probationEndTime },
      company_id = #{ company.id },
      department_id = #{ department.id },
      company_email = #{ companyEmail },
      contract_sign_unit = #{ contractSignUnit },
      labor_legalmana = #{ laborLegalmana },
      report_address = #{ reportAddress },
      full_wages = #{ fullWages },
      probation_wages = #{ probationWages },
      basic_wages = #{ basicWages },
      probation_basic_wages = #{ probationBasicWages },
      secrecy_reward = #{ secrecyReward },
      system_reward = #{ systemReward },
      basic_performance = #{ basicPerformance },
      floating_performance = #{ floatingPerformance },
      probation_basic_performance = #{ probationBasicPerformance },
      probation_floating_performance = #{ probationFloatingPerformance },
      contract_date = #{ contractDate },
      contract_start_date = #{ contractStartDate },
      contract_status = #{ contractStatus.value },
      sign_status = #{ signStatus.value },
      remarks = #{ remarks },
      update_by = #{ updateBy },
      update_date = #{ updateDate },
      expiration_date = #{ expirationDate },
      end_date = #{ endDate },
      arrive_name = #{ arriveName },
      arrive_phone = #{ arrivePhone },
      sign_date = #{ signDate },
      proc_inst = #{ procInst },
      proc_status = #{ procStatus.id },
    </trim>
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <update id="delete">
    UPDATE tsm_induction_contract_renewal SET
    update_by = #{updateBy},
    update_date = #{updateDate},
    del_flag = #{DEL_FLAG_DELETE}
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO tsm_induction_contract_renewal(
    <trim suffixOverrides=",">
      id,
      code,
      theme,
      name,
      gender,
      phone,
      id_number,
      email,
      address,
      entry_time,
      probation_month,
      employee_level,
      employee_number,
      tech_position,
      b_job,
      contract_start_time,
      contract_end_time,
      probation_end_time,
      company_id,
      department_id,
      company_email,
      contract_sign_unit,
      labor_legalmana,
      report_address,
      full_wages,
      probation_wages,
      basic_wages,
      probation_basic_wages,
      secrecy_reward,
      system_reward,
      basic_performance,
      floating_performance,
      probation_basic_performance,
      probation_floating_performance,
      contract_date,
      contract_start_date,
      contract_status,
      sign_status,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
      expiration_date,
      end_date,
      arrive_name,
      arrive_phone,
      sign_date,
      proc_inst,
      proc_status,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{ entity.id },
        #{ entity.code },
        #{ entity.theme },
        #{ entity.name },
        #{ entity.gender.id },
        #{ entity.phone },
        #{ entity.idNumber },
        #{ entity.email },
        #{ entity.address },
        #{ entity.entryTime },
        #{ entity.probationMonth.id },
        #{ entity.employeeLevel },
        #{ entity.employeeNumber },
        #{ entity.techPosition.id },
        #{ entity.bjob },
        #{ entity.contractStartTime },
        #{ entity.contractEndTime },
        #{ entity.probationEndTime },
        #{ entity.company.id },
        #{ entity.department.id },
        #{ entity.companyEmail },
        #{ entity.contractSignUnit },
        #{ entity.laborLegalmana },
        #{ entity.reportAddress },
        #{ entity.fullWages },
        #{ entity.probationWages },
        #{ entity.basicWages },
        #{ entity.probationBasicWages },
        #{ entity.secrecyReward },
        #{ entity.systemReward },
        #{ entity.basicPerformance },
        #{ entity.floatingPerformance },
        #{ entity.probationBasicPerformance },
        #{ entity.probationFloatingPerformance },
        #{ entity.contractDate },
        #{ entity.contractStartDate },
        #{ entity.contractStatus.value },
        #{ entity.signStatus.value },
        #{ entity.remarks },
        #{ entity.createBy },
        #{ entity.createDate },
        #{ entity.updateBy },
        #{ entity.updateDate },
        #{ entity.delFlag },
        #{ entity.expirationDate },
        #{ entity.endDate },
        #{ entity.arriveName },
        #{ entity.arrivePhone },
        #{ entity.signDate },
        #{ entity.procInst },
        #{ entity.procStatus.id },
      </trim>
      )
    </foreach>
  </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE tsm_induction_contract_renewal
    <set>
      <trim prefix="theme=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.theme}
        </foreach>
      </trim>
      <trim prefix="name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.name}
        </foreach>
      </trim>
      <trim prefix="gender=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.gender.id}
        </foreach>
      </trim>
      <trim prefix="phone=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.phone}
        </foreach>
      </trim>
      <trim prefix="id_number=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.idNumber}
        </foreach>
      </trim>
      <trim prefix="email=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.email}
        </foreach>
      </trim>
      <trim prefix="address=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.address}
        </foreach>
      </trim>
      <trim prefix="entry_time=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.entryTime}
        </foreach>
      </trim>
      <trim prefix="probation_month=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.probationMonth.id}
        </foreach>
      </trim>
      <trim prefix="employee_level=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.employeeLevel}
        </foreach>
      </trim>
      <trim prefix="employee_number=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.employeeNumber}
        </foreach>
      </trim>
      <trim prefix="tech_position=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.techPosition.id}
        </foreach>
      </trim>
      <trim prefix="b_job=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.bjob}
        </foreach>
      </trim>
      <trim prefix="contract_start_time=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.contractStartTime}
        </foreach>
      </trim>
      <trim prefix="contract_end_time=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.contractEndTime}
        </foreach>
      </trim>
      <trim prefix="probation_end_time=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.probationEndTime}
        </foreach>
      </trim>
      <trim prefix="company_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.company.id}
        </foreach>
      </trim>
      <trim prefix="department_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.department.id}
        </foreach>
      </trim>
      <trim prefix="company_email=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.companyEmail}
        </foreach>
      </trim>
      <trim prefix="contract_sign_unit=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.contractSignUnit}
        </foreach>
      </trim>
      <trim prefix="labor_legalmana=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.laborLegalmana}
        </foreach>
      </trim>
      <trim prefix="report_address=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.reportAddress}
        </foreach>
      </trim>
      <trim prefix="full_wages=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.fullWages}
        </foreach>
      </trim>
      <trim prefix="probation_wages=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.probationWages}
        </foreach>
      </trim>
      <trim prefix="basic_wages=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.basicWages}
        </foreach>
      </trim>
      <trim prefix="probation_basic_wages=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.probationBasicWages}
        </foreach>
      </trim>
      <trim prefix="secrecy_reward=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.secrecyReward}
        </foreach>
      </trim>
      <trim prefix="system_reward=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.systemReward}
        </foreach>
      </trim>
      <trim prefix="basic_performance=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.basicPerformance}
        </foreach>
      </trim>
      <trim prefix="floating_performance=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.floatingPerformance}
        </foreach>
      </trim>
      <trim prefix="probation_basic_performance=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.probationBasicPerformance}
        </foreach>
      </trim>
      <trim prefix="probation_floating_performance=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.probationFloatingPerformance}
        </foreach>
      </trim>
      <trim prefix="contract_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.contractDate}
        </foreach>
      </trim>
      <trim prefix="contract_start_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.contractStartDate}
        </foreach>
      </trim>
      <trim prefix="contract_status=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.contractStatus.value}
        </foreach>
      </trim>
      <trim prefix="sign_status=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.signStatus.value}
        </foreach>
      </trim>
      <trim prefix="remarks=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.remarks}
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
      <trim prefix="expiration_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.expirationDate}
        </foreach>
      </trim>
      <trim prefix="end_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.endDate}
        </foreach>
      </trim>
      <trim prefix="arrive_name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.arriveName}
        </foreach>
      </trim>
      <trim prefix="arrive_phone=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.arrivePhone}
        </foreach>
      </trim>
      <trim prefix="sign_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.signDate}
        </foreach>
      </trim>
      <trim prefix="proc_inst=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.procInst}
        </foreach>
      </trim>
      <trim prefix="proc_status=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.procStatus.id}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    UPDATE tsm_induction_contract_renewal
    <set>
      <trim prefix="del_flag=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then 1
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
</mapper>